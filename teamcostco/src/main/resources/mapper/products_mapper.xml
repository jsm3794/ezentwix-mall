<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Products">

    <sql id="getAll">
        SELECT
            product_id, product_name, product_code, category_large,
            category_medium, category_small, category_detail, purchase_price,
            selling_price, brand, min_required_qty, storage_qty,
            display_qty, create_date, update_date, (display_qty + storage_qty) AS total_qty,
            discount
        FROM products
        <where>
            <if test="query != null and query != ''">
                AND product_name LIKE '%' || #{query} || '%'
            </if>
            <if test="product_code != null and product_code != ''">
                AND product_code LIKE '%' || #{product_code} || '%'
            </if>
            <if test="purchase_price_start != null and purchase_price_start != ''">
                AND purchase_price <![CDATA[>]]>= #{purchase_price_start}
            </if>
            <if test="purchase_price_end != null and purchase_price_end != ''">
                AND purchase_price <![CDATA[<]]>= #{purchase_price_end}
            </if>
            <if test="selling_price_start != null and selling_price_start != ''">
                AND selling_price <![CDATA[>]]>= #{selling_price_start}
            </if>
            <if test="selling_price_end != null and selling_price_end != ''">
                AND selling_price <![CDATA[<]]>= #{selling_price_end}
            </if>
            <if test="brands != null and !brands.isEmpty()">
                AND brand IN
                <foreach collection="brands" item="brand" open="(" close=")" separator=",">
                    #{brand}
                </foreach>
            </if>
        </where>
        ORDER BY product_id DESC
    </sql>

    <sql id="getBrandGroupByProductName">
        SELECT brand as name, count(*) as count
        FROM products
        <where>
            <if test="product_name != null and product_name != ''">
                AND product_name like '%' || #{product_name} || '%'
            </if>
        </where>
        GROUP BY brand
    </sql>

    <sql id="findById">
        SELECT * FROM products WHERE product_id = #{productId}
    </sql>

    <sql id="getByProductCode">
        SELECT * FROM products WHERE product_code = #{productCode}
    </sql>

    <sql id="getLowProducts">
        SELECT COUNT(*) AS low_products
        FROM products
        WHERE min_required_qty <![CDATA[>]]> display_qty + storage_qty
    </sql>

    <sql id="getTotalProductsQty">
        SELECT COUNT(*) AS total_products_qty
        FROM products
    </sql>

    <sql id="getTotalCategories">
        SELECT COUNT(*) AS total_categories
        FROM (
            SELECT DISTINCT
                category_large, category_medium,
                category_small, category_detail
            FROM products
        )
    </sql>

    <sql id="updateProduct">
        UPDATE products
        SET
            product_name = #{product_name},
            category_large = #{category_large},
            category_medium = #{category_medium},
            category_small = #{category_small},
            category_detail = #{category_detail},
            purchase_price = #{purchase_price}, 
            selling_price = #{selling_price},   
            brand = #{brand}
        WHERE
            product_id = #{product_id}
    </sql>

    <sql id="getRecommendProducts">
      SELECT product_name, thumbnail_url, p.product_id AS product_id, p.product_code AS product_code, selling_price FROM products p
      INNER JOIN product_thumbnails thumbnail ON p.product_code = thumbnail.product_code
    </sql>

    <update id="updateProduct" parameterType="product">
        <include refid="updateProduct"></include>
    </update>

    <select id="getTotalCategories" resultType="Integer">
        <include refid="getTotalCategories"/>
    </select>

    <select id="getTotalProductsQty" resultType="Integer">
        <include refid="getTotalProductsQty"/>
     </select>

    <select id="getLowProducts" resultType="Integer">
        <include refid="getLowProducts"/>
    </select>

    <select id="getAll" resultType="product">
        <include refid="getAll"/>
    </select>

    <select id="findById" parameterType="Long" resultType="product">
       <include refid="findById"/>
    </select>

    <select id="getBrandGroupByProductName" parameterType="String" resultType="brandgroup">
        <include refid="getBrandGroupByProductName"></include>
    </select>

    <select id="getByProductCode" parameterType="Long" resultType="product">
        <include refid="getByProductCode"/>
    </select>

    <select id="getRecommendProducts" resultType="recommendProduct">
        <include refid="getRecommendProducts"/>
    </select>

</mapper>